# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

[build-system]
requires = [ "cython>=3.0.0", "setuptools>=61", "wheel",]
build-backend = "setuptools.build_meta"

[project]
name = "pyiceberg"
version = "0.10.0"
description = "Apache Iceberg is an open table format for huge analytic datasets"
readme = "README.md"
requires-python = "!=3.9.7,>=3.9.2"
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "cachetools<6.0.0,>=5.5.0",
    "click<9.0.0,>=7.1.1",
    "fsspec>=2023.1.0",
    "mmh3<6.0.0,>=4.0.0",
    "pydantic!=2.4.0,!=2.4.1,<3.0,>=2.0",
    "pyparsing<4.0.0,>=3.1.0",
    "pyroaring<2.0.0,>=1.0.0",
    "requests<3.0.0,>=2.20.0",
    "rich<14.0.0,>=10.11.0",
    "sortedcontainers==2.4.0",
    "strictyaml<2.0.0,>=1.7.0",
    "tenacity<10.0.0,>=8.2.3",
    "zstandard<1.0.0,>=0.13.0",
]
dynamic = []

[project.license]
file = "LICENSE"

[[project.authors]]
name = "Apache Software Foundation"
email = "dev@iceberg.apache.org"

[project.urls]
Homepage = "https://py.iceberg.apache.org/"
Repository = "https://github.com/apache/iceberg-python"

[project.scripts]
pyiceberg = "pyiceberg.cli.console:run"

[project.optional-dependencies]
pyarrow = [ "pyarrow<20.0.0,>=17.0.0", "pyiceberg-core>=0.5.1",]
pandas = [ "pandas<3.0.0,>=1.0.0", "pyarrow<20.0.0,>=17.0.0",]
duckdb = [ "duckdb<2.0.0,>=0.5.0", "pyarrow<20.0.0,>=17.0.0",]
ray = [
    "pandas<3.0.0,>=1.0.0",
    "pyarrow<20.0.0,>=17.0.0",
    'ray==2.10.0; python_version < "3.9"',
    'ray<3.0.0,>=2.10.0; python_version >= "3.9"',
]
daft = [ "getdaft>=0.2.12",]
polars = [ "polars<2.0.0,>=1.21.0",]
snappy = [ "python-snappy<1.0.0,>=0.6.0",]
hive = [ "thrift<1.0.0,>=0.13.0",]
hive-kerberos = [
    'kerberos>=1.3.1; platform_system != "Windows"',
    "thrift<1.0.0,>=0.13.0",
    "thrift-sasl>=0.4.3",
    'winkerberos>=0.12.2; platform_system == "Windows"',
]
s3fs = [ "s3fs>=2023.1.0",]
glue = [ "boto3>=1.24.59", "mypy-boto3-glue>=1.28.18",]
adlfs = [ "adlfs>=2023.1.0",]
dynamodb = [ "boto3>=1.24.59",]
zstandard = [ "zstandard<1.0.0,>=0.13.0",]
sql-postgres = [ "psycopg2-binary>=2.9.6", "sqlalchemy<3.0.0,>=2.0.18",]
sql-sqlite = [ "sqlalchemy<3.0.0,>=2.0.18",]
gcsfs = [ "gcsfs>=2023.1.0",]
rest-sigv4 = [ "boto3>=1.24.59",]
pyiceberg-core = [ "pyiceberg-core<1.0.0,>=0.4.0",]

[tool.setuptools.packages.find]
include = [ "pyiceberg*", "vendor/fb303*", "vendor/hive_metastore*",]

[tool.setuptools.package-data]
"*" = [ "*.so", "*.pyd", "*.pyx",]

[tool.setuptools.exclude-package-data]
pyiceberg = [ "*.pyc", "*.py",]

[tool.cibuildwheel.environment]
CIBW_BUILD_FRONTEND = "build[uv]"

[[tool.cibuildwheel.overrides]]
select = "cp3{9,10,11,12}-*"

[tool.uv]
no-build-isolation-package = [ "cython",]

[tool.pytest.ini_options]
testpaths = [ "tests",]
markers = [
    "unmarked: marks a test as a unittest",
    "s3: marks a test as requiring access to s3 compliant storage (use with --aws-access-key-id, --aws-secret-access-key, and --endpoint args)",
    "adls: marks a test as requiring access to adls compliant storage (use with --adls.account-name, --adls.account-key, and --adls.endpoint args)",
    "integration: marks integration tests against Apache Spark",
    "gcs: marks a test as requiring access to gcs compliant storage (use with --gs.token, --gs.project, and --gs.endpoint)",
    "benchmark: collection of tests to validate read/write performance before and after a change",
]
filterwarnings = [
    "error",
    "ignore:A plugin raised an exception during an old-style hookwrapper teardown.",
    "ignore:unclosed <socket.socket",
    "ignore:distutils Version classes are deprecated. Use packaging.version instead.",
    "ignore:datetime.datetime.utcfromtimestamp\\(\\) is deprecated and scheduled for removal in a future version.",
    "ignore:datetime.datetime.utcnow\\(\\) is deprecated and scheduled for removal in a future version.",
    "ignore:is_datetime64tz_dtype is deprecated and will be removed in a future version.",
]

[tool.mypy]
mypy_path = "python"
no_implicit_optional = true
namespace_packages = false
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
disallow_any_generics = true
disallow_untyped_defs = true
implicit_reexport = false

[[tool.mypy.overrides]]
module = "pytest_mock.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyarrow.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pandas.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "snappy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "zstandard.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pydantic.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pydantic_core.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pytest.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fastavro.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mmh3.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "hive_metastore.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "thrift.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "requests_mock.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "click.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "rich.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "fsspec.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "s3fs.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "azure.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "adlfs.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "gcsfs.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "packaging.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "boto3"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "botocore.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "mypy_boto3_glue.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "moto"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiobotocore.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "aiohttp.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "duckdb.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "ray.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "daft.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyparsing.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyspark.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "strictyaml.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sortedcontainers.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "sqlalchemy.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "Cython.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "setuptools.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tenacity.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyiceberg_core.*"
ignore_missing_imports = true

[tool.coverage.run]
source = [ "pyiceberg/",]

[dependency-groups]
dev = [
    "pytest==7.4.4",
    "pytest-checkdocs==2.13.0",
    "pytest-lazy-fixture==0.6.3",
    "pytest-mock==3.14.1",
    "pre-commit==4.2.0",
    "fastavro==1.11.1",
    "coverage[toml]>=7.4.2",
    "requests-mock==1.12.1",
    "moto[server]>=5.0.2",
    "typing-extensions==4.13.2",
    "pyspark==3.5.6",
    "cython==3.1.1",
    "deptry>=0.14,<0.24",
    "datafusion>=44,<48",
    "docutils!=0.21.post1",
    "ruff>=0.8.0",
    "mypy>=1.0.0",
]
docs = [
    "mkdocs==1.6.1",
    "griffe==1.7.3",
    "jinja2==3.1.6",
    "mkdocstrings==0.29.1",
    "mkdocstrings-python==1.16.11",
    "mkdocs-literate-nav==0.6.2",
    "mkdocs-autorefs==1.4.2",
    "mkdocs-gen-files==0.5.0",
    "mkdocs-material==9.6.14",
    "mkdocs-material-extensions==1.3.1",
    "mkdocs-section-index==0.3.10",
]
