# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.

[build-system]
requires = ["setuptools>=61", "wheel", "cython>=3.0.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
include = ["pyiceberg*"]

[tool.setuptools.package-data]
"*" = ["*.so", "*.pyd", "*.pyx"]

[tool.setuptools.exclude-package-data]
pyiceberg = ["*.pyc"]

# [tool.setuptools]
# packages = ["pyiceberg"]

# [[tool.setuptools.ext-modules]]
# name = "pyiceberg.avro.decoder_fast"
# sources = ["pyiceberg/avro/decoder_fast.pyx"]
# language = "c"


# [tool.setuptools.ext-modules.extra-compile-args]
# "win32" = ["/O2"]
# "linux" = ["-O3"]
# "darwin" = ["-O3"]

[tool.uv]
no-build-isolation-package = ["cython"]

[project]
name = "pyiceberg"
version = "0.9.2"
description = "Apache Iceberg is an open table format for huge analytic datasets"
readme = "README.md"
license-files = ["LICENSE"]
license = "Apache-2.0"
authors = [
    { name = "Apache Software Foundation", email = "dev@iceberg.apache.org" }
]
requires-python = ">=3.9.2,!=3.9.7"
classifiers = [
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "python=^3.9.2,!=3.9.7",
    "mmh3>=4.0.0,<6.0.0",
    "requests>=2.20.0,<3.0.0",
    "click>=7.1.1,<9.0.0",
    "rich>=10.11.0,<14.0.0",
    "strictyaml>=1.7.0,<2.0.0",
    "pydantic>=2.0,<3.0,!=2.4.0,!=2.4.1",
    "sortedcontainers==2.4.0",
    "fsspec>=2023.1.0",
    "pyparsing>=3.1.0,<4.0.0",
    "zstandard>=0.13.0,<1.0.0",
    "tenacity>=8.2.3,<10.0.0",
    "cachetools>=5.5.0,<6.0.0",
]

packages = [
  { include = "pyiceberg" },
  { from = "vendor", include = "fb303" },
  { from = "vendor", include = "hive_metastore" },
  { include = "tests", format = "sdist" },
  { include = "Makefile", format = "sdist" },
  { include = "NOTICE", format = [
    "sdist",
    "wheel",
  ] },
]
include = [
  { path = "dev", format = "sdist" },
  { path = "pyiceberg/**/*.so", format = "wheel" },
  { path = "pyiceberg/**/*.pyd", format = "wheel" },
]

[project.optional-dependencies]
pyarrow = ["pyarrow>=17.0.0,<20.0.0"]
pandas = ["pandas>=1.0.0,<3.0.0", "pyarrow>=17.0.0,<20.0.0"]
duckdb = ["duckdb>=0.5.0,<2.0.0", "pyarrow>=17.0.0,<20.0.0"]
ray = [
    "ray==2.10.0; python_version<'3.9'",
    "ray>=2.10.0,<3.0.0; python_version>='3.9'",
    "pyarrow>=17.0.0,<20.0.0",
    "pandas>=1.0.0,<3.0.0",
]
daft = ["getdaft>=0.2.12"]
polars = ["polars>=1.21.0,<2.0.0"]
snappy = ["python-snappy>=0.6.0,<1.0.0"]
hive = ["thrift>=0.13.0,<1.0.0"]
hive-kerberos = [
    "thrift>=0.13.0,<1.0.0",
    "thrift-sasl>=0.4.3",
    "kerberos>=1.3.1; platform_system != 'Windows'",
    "winkerberos>=0.12.2; platform_system == 'Windows'",
]
s3fs = ["s3fs>=2023.1.0"]
glue = ["boto3>=1.24.59", "mypy-boto3-glue>=1.28.18"]
adlfs = ["adlfs>=2023.1.0"]
dynamodb = ["boto3>=1.24.59"]
zstandard = ["zstandard>=0.13.0,<1.0.0"]
sql-postgres = ["sqlalchemy>=2.0.18,<3.0.0", "psycopg2-binary>=2.9.6"]
sql-sqlite = ["sqlalchemy>=2.0.18,<3.0.0"]
gcsfs = ["gcsfs>=2023.1.0"]
rest-sigv4 = ["boto3>=1.24.59"]
pyiceberg-core = ["pyiceberg-core>=0.4.0,<1.0.0"]
dev = [
    "pytest==7.4.4",
    "pytest-checkdocs==2.13.0",
    "pytest-lazy-fixture==0.6.3",
    "pre-commit==4.1.0",
    "fastavro==1.10.0",
    "coverage[toml]>=7.4.2,<8.0.0",
    "requests-mock==1.12.1",
    "moto[server]>=5.0.2,<6.0.0",
    "typing-extensions==4.12.2",
    "pytest-mock==3.14.0",
    "pyspark==3.5.3",
    "cython==3.0.12",
    "deptry>=0.14,<0.24",
    "datafusion>=44,<46",
    "docutils!=0.21.post1",
    "ruff>=0.1.0",
]
docs = [
    "mkdocs==1.6.1",
    "griffe==1.5.7",
    "jinja2==3.1.5",
    "mkdocstrings==0.28.1",
    "mkdocstrings-python==1.16.1",
    "mkdocs-literate-nav==0.6.1",
    "mkdocs-autorefs==1.4.0",
    "mkdocs-gen-files==0.5.0",
    "mkdocs-material==9.6.5",
    "mkdocs-material-extensions==1.3.1",
    "mkdocs-section-index==0.3.9",
]

[project.scripts]
pyiceberg = "pyiceberg.cli.console:run"

[project.urls]
Homepage = "https://py.iceberg.apache.org/"
Repository = "https://github.com/apache/iceberg-python"



[tool.pytest.ini_options]
testpaths = ["tests"]
markers = [
    "unmarked: marks a test as a unittest",
    "s3: marks a test as requiring access to s3 compliant storage (use with --aws-access-key-id, --aws-secret-access-key, and --endpoint args)",
    "adls: marks a test as requiring access to adls compliant storage (use with --adls.account-name, --adls.account-key, and --adls.endpoint args)",
    "integration: marks integration tests against Apache Spark",
    "gcs: marks a test as requiring access to gcs compliant storage (use with --gs.token, --gs.project, and --gs.endpoint)",
    "benchmark: collection of tests to validate read/write performance before and after a change"
]
filterwarnings = [
    "error",
    "ignore:A plugin raised an exception during an old-style hookwrapper teardown.",
    "ignore:unclosed <socket.socket",
    "ignore:distutils Version classes are deprecated. Use packaging.version instead.",
    "ignore:datetime.datetime.utcfromtimestamp\\(\\) is deprecated and scheduled for removal in a future version.",
    "ignore:datetime.datetime.utcnow\\(\\) is deprecated and scheduled for removal in a future version.",
    "ignore:is_datetime64tz_dtype is deprecated and will be removed in a future version.",
]

[tool.mypy]
mypy_path = "python"
no_implicit_optional = true
namespace_packages = false
warn_redundant_casts = true
warn_unreachable = true
warn_unused_ignores = true
disallow_any_generics = true
disallow_untyped_defs = true
implicit_reexport = false

# ...existing mypy overrides...

[tool.coverage.run]
source = ['pyiceberg/']
